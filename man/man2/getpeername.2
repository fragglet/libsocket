.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpeername.2	6.5 (Berkeley) 3/10/91
.\"
.\" Modified Sat Jul 24 16:37:50 1993 by Rik Faith <faith@cs.unc.edu>
.\"
.TH GETPEERNAME 2 "24 July 1993" "BSD Man Page" "Linux Programmer's Manual"
.SH NAME
getpeername \- get name of connected peer
.SH SYNOPSIS
.BI "int getpeername(int " s ", struct sockaddr *" name ", int *" namelen );
.SH DESCRIPTION
.B Getpeername
returns the name of the peer connected to socket
.IR s .
The
.I namelen
parameter should be initialized to indicate the amount of space pointed to
by
.IR name .
On return it contains the actual size of the name returned (in bytes).  The
name is truncated if the buffer provided is too small.
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP 0.8i
.B EBADF
The argument
.I s
is not a valid descriptor.
.TP
.B ENOTSOCK
The argument
.I s
is a file, not a socket.
.TP
.B ENOTCONN
The socket is not connected.
.TP
.B ENOBUFS
Insufficient resources were available in the system
to perform the operation.
.TP
.B EFAULT
The 
.I name
parameter points to memory not in a valid part of the
process address space.
.SH CONFORMING TO
SVr4, 4.4BSD (the
.B getpeername
function call first appeared in 4.2BSD).
.SH "SEE ALSO"
.BR accept "(2), " bind "(2), " getsockname (2)
