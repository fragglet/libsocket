.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)send.2	6.9 (Berkeley) 5/1/91
.\"
.\" Modified Sat Jul 24 01:15:33 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Tue Oct 22 17:55:49 1996 by Eric S. Raymond <esr@thyrsus.com>
.\"
.TH SEND 2 "24 July 1993" "BSD Man Page" "Linux Programmer's Manual"
.SH NAME
send, sendto, sendmsg \- send a message from a socket
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <sys/socket.h>
.sp 2
.BI "int send(int " s ", const void *" msg ", int " len ","
.BI "unsigned int " flags );
.sp
.BI "int sendto(int " s ", const void *" msg ", int " len ","
.BI "unsigned int " flags ", const struct sockaddr *" to ", int " tolen );
.sp
.BI "int sendmsg(int " s ", const struct msghdr *" msg ","
.BI "unsigned int " flags );
.SH DESCRIPTION
WARNING: This is a BSD man page.  As of Linux 0.99.11,
.B sendmsg
was not implemented.

.BR Send ,
.BR sendto ,
and
.B sendmsg
are used to transmit a message to another socket.
.B Send
may be used only when the socket is in a 
.I connected
state, while 
.B sendto
and
.B sendmsg
may be used at any time.

The address of the target is given by
.I to
with 
.I tolen
specifying its size.  The length of the message is given by
.IR len .
If the message is too long to pass atomically through the
underlying protocol, the error
.B EMSGSIZE
is returned, and the message is not transmitted.

No indication of failure to deliver is implicit in a
.BR send .
Locally detected errors are indicated by a return value of \-1.

If no messages space is available at the socket to hold the message to be
transmitted, then
.B send
normally blocks, unless the socket has been placed in non-blocking I/O
mode.  The
.BR select (2)
call may be used to determine when it is possible to send more data.

The
.I flags
parameter may include one or more of the following:

.RS
.nf
#define	MSG_OOB        0x1  /* process out-of-band data */
#define	MSG_DONTROUTE  0x4  /* bypass routing, use direct interface */
.fi
.RE

The flag
.B MSG_OOB
is used to send
.I out-of-band
data on sockets that support this notion (e.g.
.BR SOCK_STREAM );
the underlying protocol must also support
.I out-of-band
data.
.B MSG_DONTROUTE
is usually used only by diagnostic or routing programs.

See 
.BR recv (2)
for a description of the
.I msghdr
structure.
.SH "RETURN VALUES"
The call returns the number of characters sent, or \-1
if an error occurred.
.SH ERRORS
.TP 0.8i
.B EBADF
An invalid descriptor was specified.
.TP
.B ENOTSOCK
The argument
.I s
is not a socket.
.TP
.B EFAULT
An invalid user space address was specified for a parameter.
.TP
.B EMSGSIZE
The socket requires that message be sent atomically, and the size
of the message to be sent made this impossible.
.TP
.B EWOULDBLOCK
The socket is marked non-blocking and the requested operation
would block.
.TP
.B ENOBUFS
The system was unable to allocate an internal buffer.
The operation may succeed when buffers become available.
.TP
.B ENOBUFS
The output queue for a network interface was full.
This generally indicates that the interface has stopped sending,
but may be caused by transient congestion.
.SH "CONFORMING TO"
4.4BSD, SVr4 (these function calls appeared in 4.2BSD).  The SVr4
versions docoment additional error conditions EINVAL, EINTR, EMSGSIZE,
ENOSR, ENOMEM.
.SH "SEE ALSO"
.BR fcntl "(2), " recv "(2), " select "(2), " getsockopt "(2), "
.BR socket "(2), " write (2)

