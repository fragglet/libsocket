.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Sat Jul 24 13:35:59 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Sun Nov 28 17:19:01 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Sat Jan 13 12:58:08 1996 by Michael Haardt
.\"   <michael@cantor.informatik.rwth-aachen.de>
.\" Modified Sun Jul 21 18:59:33 1996 by Andries Brouwer <aeb@cwi.nl>
.\"
.TH WRITE 2 "13 January 1996" "Linux" "System calls"
.SH NAME
write \- write to a file descriptor
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "ssize_t write(int " fd ", const void *" buf ", size_t " count );
.SH DESCRIPTION
.B write
writes up to
.I count
bytes to the file referenced by the file descriptor
.I fd
from the buffer starting at
.I buf.
POSIX requires that a \fBread()\fP which can be proved to occur after a
\fBwrite()\fP has returned returns the new data.  Note that not all file
systems are POSIX conforming.
.SH "RETURN VALUE"
On success, the number of bytes written are returned (zero indicates
nothing was written).  On error, \-1 is returned, and \fIerrno\fP is set
appropriately.  If \fIcount\fP is zero and the file descriptor refers to
a regular file, 0 will be returned without causing any other effect.
For a special file, the results are not portable.
.SH ERRORS
.IP \fBEBADF\fP
.I fd
is not a valid file descriptor or is not open for writing.
.IP \fBEINVAL\fP
.I fd
is attached to an object which is unsuitable for writing.
.IP \fBEFAULT\fP
.I buf
is outside your accessible address space.
.IP \fBEPIPE\fP
.I fd
is connected to a pipe or socket whose reading end is closed.  When this
happens the writing process will receive a
.B SIGPIPE
signal; if it catches, blocks or ignores this the error
.B EPIPE
is returned.
.IP \fBEAGAIN\fP
Non-blocking I/O has been selected using
.B O_NONBLOCK
and there was no room in the pipe or socket connected to
.I fd
to write the data immediately.
.IP \fBEINTR\fP
The call was interrupted by a signal before any data was written.
.IP \fBENOSPC\fP
The device containing the file referred to by
.I fd
has no room for the data.
.IP \fBEIO\fP
A low-level I/O error occurred while modifying the inode.
.PP
Other errors may occur, depending on the object connected to
.IR fd .
.SH "CONFORMING TO"
SVr4, SVID, POSIX, X/OPEN, 4.3BSD.  SVr4 documents additional error
conditions EDEADLK, EFBIG, ENOLCK, ENOLNK, ENOSR, ENXIO, EPIPE, or ERANGE.
Under SVr4 a write may be interrupted and return EINTR at any point,
not just before any data is written. 
.SH "SEE ALSO"
.BR open (2),
.BR read (2),
.BR fcntl (2),
.BR close (2),
.BR lseek (2),
.BR select (2),
.BR ioctl (2),
.BR fsync (2),
.BR fwrite (3).
