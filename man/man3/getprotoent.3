.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:26:03 1993 by Rik Faith (faith@cs.unc.edu)
.TH GETPROTOENT 3  "April 24, 1993" "BSD" "Linux Programmer's Manual"
.SH NAME
getprotoent, getprotobyname, getprotobynumber, setprotoent,
endprotoent \- get protocol entry
.SH SYNOPSIS
.nf
.B #include <netdb.h>
.sp
.B struct protoent *getprotoent(void);
.sp
.BI "struct protoent *getprotobyname(const char *" name );
.sp
.BI "struct protoent *getprotobynumber(int " proto );
.sp
.BI "void setprotoent(int " stayopen );
.sp
.B void endprotoent(void);
.fi
.SH DESCRIPTION
The \fBgetprotoent()\fP function reads the next line from the file
\fI/etc/protocols\fP and returns a structure \fIprotoent\fP
containing the broken out fields from the line.  The
\fI/etc/protocols\fP file is opened if necessary.
.PP
The \fBgetprotobyname()\fP function returns a \fIprotoent\fP
structure for the line from \fI/etc/protocols\fP that matches
the protocol name \fIname\fP.
.PP
The \fBgetprotobynumber()\fP function returns a \fIprotoent\fP
structure for the line that matches the protocol number \fInumber\fP.
.PP
The \fBsetprotoent()\fP function opens and rewinds the
\fI/etc/protocols\fP file.  If \fIstayopen\fP is true (1), then
the file will not be closed between calls to \fBgetprotobyname()\fP
or \fBgetprotobynumber()\fP.
.PP
The \fBendprotoent()\fP function closes \fI/etc/protocols\fP.
.PP
The \fIprotoent\fP structure is defined in \fI<netdb.h>\fP as follows:
.sp
.RS
.nf
.ne 5
.ta 8n 16n 32n
struct protoent {
	char	*p_name;		/* official protocol name */
	char	**p_aliases;		/* alias list */
	int	p_proto;		/* protocol number */
}
.ta
.fi
.RE
.PP
The members of the \fIprotoent\fP structure are:
.TP
.I p_name
The official name of the protocol.
.TP
.I p_aliases
A zero terminated list of alternative names for the protocol.
.TP
.I p_proto
The protocol number.
.SH "RETURN VALUE"
The \fBgetprotoent()\fP, \fBgetprotobyname()\fP and \fBgetprotobynumber()\fP
functions return the \fIprotoent\fP structure, or a NULL pointer if an
error occurs or the end of the file is reached.
.SH FILES
.PD 0
.TP
.I /etc/protocols
protocol database file
.PD
.SH "CONFORMING TO"
BSD 4.3
.SH "SEE ALSO"
.BR getservent "(3), " getnetent "(3), " protocols (5)
